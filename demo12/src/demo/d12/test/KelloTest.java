package demo.d12.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import demo.d12.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.04.06 21:09:17 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KelloTest {



  // Generated by ComTest BEGIN
  /** testTarkista21 */
  @Test
  public void testTarkista21() {    // Kello: 21
    Kello kello = new Kello(); 
    assertEquals("From: Kello line: 23", null, kello.tarkista("12:30")); 
    assertEquals("From: Kello line: 24", null, kello.tarkista("09:23")); 
    assertEquals("From: Kello line: 25", null, kello.tarkista("9:23")); 
    assertEquals("From: Kello line: 26", null, kello.tarkista("23:59")); 
    assertEquals("From: Kello line: 27", null, kello.tarkista("00:00")); 
    assertEquals("From: Kello line: 29", "Kellonaika \"kissa\" on virheellinen. Ilmoita kellonaika muodossa \"hh:mm\".", kello.tarkista("kissa")); 
    assertEquals("From: Kello line: 30", "Kellonajan \"12 30\" välimerkki on virheellinen. Ilmoita kellonaika muodossa \"hh:mm\".", kello.tarkista("12 30")); 
    assertEquals("From: Kello line: 31", "Kellonajan \"12.30\" välimerkki on virheellinen. Ilmoita kellonaika muodossa \"hh:mm\".", kello.tarkista("12.30")); 
    assertEquals("From: Kello line: 32", "Kellonajan \"1230\" välimerkki on virheellinen. Ilmoita kellonaika muodossa \"hh:mm\".", kello.tarkista("1230")); 
    assertEquals("From: Kello line: 33", "Kellonaika \"12:301\" on virheellinen. Ilmoita minuutit kahdella numerolla väliltä 00-59.", kello.tarkista("12:301")); 
    assertEquals("From: Kello line: 34", "Kellonaika \":30\" on virheellinen. Ilmoita tunnit yhdellä tai kahdella numerolla.", kello.tarkista(":30")); 
    assertEquals("From: Kello line: 35", "Kellonaika \"25:23\" on virheellinen. Tarkista tunnit.", kello.tarkista("25:23")); 
    assertEquals("From: Kello line: 36", "Kellonaika \"01:65\" on virheellinen. Tarkista minuutit.", kello.tarkista("01:65")); 
  } // Generated by ComTest END
}