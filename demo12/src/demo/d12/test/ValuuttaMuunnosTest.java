package demo.d12.test;
// Generated by ComTest BEGIN
import demo.d12.ValuuttaMuunnos.*;
import fi.jyu.mit.ohj2.Suuntaaja;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.04.07 15:03:13 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class ValuuttaMuunnosTest {



  // Generated by ComTest BEGIN
  /** testValuutta59 */
  @Test
  public void testValuutta59() {    // ValuuttaMuunnos: 59
    Valuutta val = new Valuutta(2,"lati"); 
    assertEquals("From: ValuuttaMuunnos line: 61", "2.00 lati", val.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testValuutta74 */
  @Test
  public void testValuutta74() {    // ValuuttaMuunnos: 74
    Valuutta val = new Valuutta("10 SKr"); 
    assertEquals("From: ValuuttaMuunnos line: 76", "10.00 SKr", val.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse87 */
  @Test
  public void testParse87() {    // ValuuttaMuunnos: 87
    Valuutta val = new Valuutta(""); 
    val.parse("10     SKr"); 
    assertEquals("From: ValuuttaMuunnos line: 90", "10.00 SKr", val.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testOnko114 */
  @Test
  public void testOnko114() {    // ValuuttaMuunnos: 114
    Valuutta val = new Valuutta("10 SKr"); 
    assertEquals("From: ValuuttaMuunnos line: 116", true, val.onko("SKr")); 
    assertEquals("From: ValuuttaMuunnos line: 117", true, val.onko("s")); 
    assertEquals("From: ValuuttaMuunnos line: 118", false, val.onko("Dkr")); 
    assertEquals("From: ValuuttaMuunnos line: 119", false, val.onko("kr")); 
    assertEquals("From: ValuuttaMuunnos line: 120", true, val.onko(".kr")); 
    assertEquals("From: ValuuttaMuunnos line: 121", false, val.onko("$")); 
    Valuutta val2 = new Valuutta("1.6 $"); 
    assertEquals("From: ValuuttaMuunnos line: 123", true, val2.onko("$")); 
    assertEquals("From: ValuuttaMuunnos line: 124", false, val2.onko("s")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testOnko138 */
  @Test
  public void testOnko138() {    // ValuuttaMuunnos: 138
    Valuutta val = new Valuutta("10 SKr"); 
    Valuutta val2 = new Valuutta(0,"s"); 
    Valuutta val3 = new Valuutta(0,"$"); 
    assertEquals("From: ValuuttaMuunnos line: 142", true, val.onko(val2)); 
    assertEquals("From: ValuuttaMuunnos line: 143", false, val.onko(val3)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa201 */
  @Test
  public void testLisaa201() {    // ValuuttaMuunnos: 201
    Valuutat valuutat = new Valuutat(); 
    Valuutta skr = new Valuutta("0.6 SKr"); 
    valuutat.lisaa(new Valuutta("1 mk")); 
    valuutat.lisaa(skr); 
    valuutat.lisaa(new Valuutta("5.7 $")); 
    assertEquals("From: ValuuttaMuunnos line: 207", "mk", valuutat.vaihdettavanValuutannimi()); 
    assertEquals("From: ValuuttaMuunnos line: 208", 5.7, valuutat.getKerroin("$"), 0.000001); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa222 */
  @Test
  public void testLisaa222() {    // ValuuttaMuunnos: 222
    Valuutat valuutat = new Valuutat(); 
    valuutat.lisaa(1,"mk"); 
    valuutat.lisaa(0.6,"SKr"); 
    valuutat.lisaa(5.7,"$"); 
    assertEquals("From: ValuuttaMuunnos line: 227", "mk", valuutat.vaihdettavanValuutannimi()); 
    assertEquals("From: ValuuttaMuunnos line: 228", 5.7, valuutat.getKerroin("$"), 0.000001); 
    assertEquals("From: ValuuttaMuunnos line: 229", "SKr", valuutat.get("SKr").getValuutannimi()); 
    assertEquals("From: ValuuttaMuunnos line: 230", "SKr", valuutat.getValuutannimi("SKr")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetVaihdettu379 */
  @Test
  public void testGetVaihdettu379() {    // ValuuttaMuunnos: 379
    Valuutat valuutat = new Valuutat(); 
    valuutat.lisaa(1,"mk"); 
    valuutat.lisaa(0.6,"SKr"); 
    valuutat.lisaa(5.7,"$"); 
    assertEquals("From: ValuuttaMuunnos line: 384", 1.80, valuutat.getVaihdettuMaara("SKr",3.0), 0.000001); 
    assertEquals("From: ValuuttaMuunnos line: 385", "1.80 mk", valuutat.getVaihdettu(new Valuutta(3.0,"SKr")).toString()); 
    assertEquals("From: ValuuttaMuunnos line: 386", "17.10 mk", valuutat.getVaihdettu(new Valuutta(3.0,"$")).toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetValuuttojenNimet399 */
  @Test
  public void testGetValuuttojenNimet399() {    // ValuuttaMuunnos: 399
    Valuutat valuutat = new Valuutat(); 
    valuutat.lisaa(1,"mk"); 
    valuutat.lisaa(0.6,"SKr"); 
    valuutat.lisaa(5.7,"$"); 
    var nimet = valuutat.getValuuttojenNimet(); 
    assertEquals("From: ValuuttaMuunnos line: 405", 3, nimet.size()); 
    assertEquals("From: ValuuttaMuunnos line: 406", "[$, SKr, mk]", nimet.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testValuuttaNaytto421 */
  @Test
  public void testValuuttaNaytto421() {    // ValuuttaMuunnos: 421
    Valuutat valuutat = new Valuutat(); 
    valuutat.lisaa(1,"mk"); 
    valuutat.lisaa(0.6,"SKr"); 
    valuutat.lisaa(5.7,"$"); 
    ValuuttaNaytto naytto = new ValuuttaNaytto(valuutat); 
    Suuntaaja.StringInput si = new Suuntaaja.StringInput(""); 
    Suuntaaja.StringOutput so = new Suuntaaja.StringOutput(); 
    si.input(""); assertEquals("From: ValuuttaMuunnos line: 433", false, naytto.kysy()); 
    si.input("loppu"); assertEquals("From: ValuuttaMuunnos line: 434", false, naytto.kysy()); 
    so.reset(); 
    si.input("3 SKr"); assertEquals("From: ValuuttaMuunnos line: 436", true, naytto.kysy()); 
    so.reset(); naytto.tulosta(); assertEquals("From: ValuuttaMuunnos line: 437", null, so.ero("3.00 SKr on 1.80 mk\n")); 
    si.input("3 $"); assertEquals("From: ValuuttaMuunnos line: 438", true, naytto.kysy()); 
    so.reset(); naytto.tulosta(); assertEquals("From: ValuuttaMuunnos line: 439", null, so.ero("3.00 $ on 17.10 mk\n")); 
    si.input("2"); assertEquals("From: ValuuttaMuunnos line: 440", true, naytto.kysy()); 
    so.reset(); naytto.tulosta(); assertEquals("From: ValuuttaMuunnos line: 441", null, so.ero("2.00 $ on 11.40 mk\n")); 
    si.input("k lati"); assertEquals("From: ValuuttaMuunnos line: 442", true, naytto.kysy());  // Yksikköä ei löydy
    so.reset(); naytto.tulosta(); assertEquals("From: ValuuttaMuunnos line: 443", null, so.ero("2.00  on 2.00 mk\n")); 
    si.input(""); assertEquals("From: ValuuttaMuunnos line: 444", false, naytto.kysy()); 
    si.palauta(); so.palauta(); 
  } // Generated by ComTest END
}